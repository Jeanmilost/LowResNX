'***************************************
'FINAL FANTASY COMBAT SCENE
'AUTHOR JEAN-MILOST REYMOND
'MODELS RIPPED FROM FINAL FANTASY
'(C) SQUARESOFT
'***************************************

GLOBAL BWIDLE1, BWIDLE2, BWATTACK, BWLOW, BWDEAD, WWIDLE1, WWIDLE2, WWATTACK, WWLOW, WWDEAD, CURSORPOS, CURSORANGLE, SELECTEDACTION, ATTACKANGLE, MAGICSTATUS, MAGICOFFSET, POINTANGLE, DAMAGES

BWIDLE1        = 16
BWIDLE2        = 18
BWATTACK       = 20
BWLOW          = 22
BWDEAD         = 40
WWIDLE1        = 28
WWIDLE2        = 30
WWATTACK       = 80
WWLOW          = 82
WWDEAD         = 100
CURSORPOS      = 104
CURSORANGLE    = 0
SELECTEDACTION = 0
ATTACKANGLE    = 0
MAGICSTATUS    = 0
MAGICOFFSET    = 0
POINTANGLE     = 0
DAMAGES        = 0

'SPRITES ARE ORGANIZED AS FOLLOW:
'0  TO 9  - SPECIAL EFFECTS
'10 TO 15 - BLACK WIZARD
'16 TO 21 - WHITE WIZARD
'22 TO 37 - WOLF
'38       - HAND CURSOR (IN MENU)
'39       - HAND CURSOR (ABOVE CHARS)
'40 TO 41 - DAMAGE POINTS

'CHARACTER STATS, WHICH ARE:
'0 - BLACK WIZARD
'1 - WHITE WIZARD
'2 - WOLF
'SECOND PARAMETERS ARE:
'0 - ATTACK DELAY
'1 - ATTACK DELAY SPEED
'2 - IF 1 ATTACK IS SCHELUDED, IF 0 ATTACK IS DELAYED
'3 - CHAR PV
'4 - CHAR PM
'5 - TARGET
DIM GLOBAL STATS(3, 6)

'COMBAT ROUND STACK ARRAY, THE INDEX ON THE TOP IS THE ONE CURRENTLY
'ATTACKING. INDEX ARE:
'0 - NONE
'1 - BLACK WIZARD
'2 - WHITE WIZARD
'3 - ENEMY
DIM GLOBAL ROUNDSTACK(3)

'DELTA CHAR POSITION TABLE, USED FOR ATTACK ANIMATIONS
DIM GLOBAL DELTA(3)

'PARTICLES ARRAY, WHICH ARE:
'0 - X POSITION
'1 - Y POSITION
'2 - CHAR INDEX
'3 - IF 1, PARTICLE IS VISIBLE
'4 - TYPE (0 = FIRE, 1 = HEALTH)
'5 - OFFSET X
'6 - OFFSET Y
'7 - START FRAME
DIM GLOBAL PARTICLES(10, 8)

GAMEPAD 1

'INITIALIZE THE CHAR STATS
STATS(0, 1) = 0.3
STATS(1, 1) = 0.35
STATS(2, 1) = 0.4
    
T = 0

RANDOMIZE TIMER

'DRAW THE LANDSCAPE
CALL DRAWSKY
CALL DRAWMOUNTAINS
CALL DRAWGROUND

MUSIC(0)

'***************************************
'MAIN FUNCTION
'***************************************
DO
    'UPDATE STATS AND PROCESS SCHELUDED ATTACK
    CALL UPDATESTATS
    CALL PROCESSSCHELUDEDATK

    'GET THE BLACK WIZARD FRAME TO SHOW
    IF T >= 25 THEN
        FRAME = BWIDLE2
    ELSE
        FRAME = BWIDLE1
    END IF

    'DRAW THE BLACK WIZARD
    CALL DRAWBLACKWIZARD(104 - DELTA(0), 40, FRAME)

    'GET THE WHITE WIZARD FRAME TO SHOW
    IF T >= 25 THEN
        FRAME = WWIDLE2
    ELSE
        FRAME = WWIDLE1
    END IF

    'DRAW THE WHITE WIZARD
    CALL DRAWWHITEWIZARD(128 - DELTA(1), 56, FRAME)

    'DRAW THE ENEMY
    CALL DRAWWOLF(16 + DELTA(2), 48, 76)

    'DRAW THE SPECIAL EFFECTS AND MENU
    CALL DRAWPARTICLES
    CALL DRAWMENU

    'INCREASE FRAME COUNTER
    T = (T + 1) MOD 50

    WAIT VBL
LOOP

'***************************************
'UPDATE THE STATS
'***************************************
SUB UPDATESTATS
    'ITERATE THROUGH CHARS
    FOR I = 0 TO 2
        'IS ATTACK STILL DELAYED?
        IF STATS(I, 2) = 0 THEN
            'ATTACK DELAY WAS REACHED?
            IF STATS(I, 0) >= 100 THEN
                'SELECT A TARGET FOR THE ATTACK
                IF I = 2 THEN
                    STATS(I, 5) = RND(10) MOD 2
                ELSE
                    STATS(I, 5) = 2
                END IF

                'SCHELUDE THE ATTACK
                CALL PUSHATTACK(I + 1)

                'NOTIFY THAT ATTACK WAS SCHELUDED
                STATS(I, 2) = 1
            ELSE
                'INCREASE THE ATTACK DELAYED TIME
                ADD STATS(I, 0), STATS(I, 1)
            END IF
        END IF
    NEXT I
END SUB

'***************************************
'PROCESS A MAGIG ON A TARGET
'ATTACKER - ATTACKER INDEX
'TARGET - TARGET INDEX
'COMPLETED - IF 1 THE ATTACK WAS COMPLETED
'***************************************
SUB MAGIC(ATTACKER, TARGET, COMPLETED)
    'ODD STATUS HAPPENS ONLY WHILE PARTICLES ARE PROCESSED
    IF (MAGICSTATUS MOD 2) = 1 THEN
        EXIT SUB
    END IF

    DAMAGECOMPLETED = 0

    'WHITE WIZARD LAUNCHED A HEALTH MAGIC?
    IF ATTACKER = 1 THEN
        'BLACK WIZARD WAS HEALTED, SHOW THE BONUS POINTS
        IF MAGICSTATUS = 2 THEN
            'APPLY BONUS HEALTH TO BLACK WIZARD
            CALL APPLYDAMAGE(0, DAMAGES, 2, DAMAGECOMPLETED)

            'WAIT UNTIL DAMAGE ANIMATION IS FULLY COMPLETED
            IF DAMAGECOMPLETED = 0 THEN
                EXIT SUB
            END IF
        ELSE IF MAGICSTATUS = 4 THEN
            'APPLY BONUS HEALTH TO WHITE WIZARD
            CALL APPLYDAMAGE(1, DAMAGES, 2, DAMAGECOMPLETED)

            'IS DAMAGE ANIMATION FULLY COMPLETED?
            IF DAMAGECOMPLETED = 1 THEN
                SPRITE OFF 0 TO 9

                COMPLETED   = 1
                MAGICSTATUS = 0
                MAGICOFFSET = 0
            END IF

            EXIT SUB
        END IF
                
        FOR I = 0 TO UBOUND(PARTICLES) - 1
            'SELECT HEALTING TARGET
            IF MAGICSTATUS = 0 THEN
                'FIRST HEALTH THE BLACK WIZARD
                CALL POPULATEHEALTH(I, 0)
            ELSE IF MAGICSTATUS = 2 THEN
                'THEN HEALTH THE WHITE WIZARD
                CALL POPULATEHEALTH(I, 1)
            ELSE
                EXIT SUB
            END IF
        NEXT I

        'HEALTH IS STARTING, SELECT THE DAMAGES TO RESTORE
        DAMAGES = RND(99)

        'PLAY THE HEALTH SOUND
        CALL PLAYHEALTH
    'BLACK WIZARD LAUNCHED A FIRE MAGIC?
    ELSE IF ATTACKER = 0 THEN
        IF MAGICSTATUS = 2 THEN
            'APPLY THE DAMAGES TO THE TARGET
            CALL APPLYDAMAGE(TARGET, DAMAGES, 7, DAMAGECOMPLETED)

            'IS DAMAGE ANIMATION FULLY COMPLETED?
            IF DAMAGECOMPLETED = 1 THEN
                SPRITE OFF 0 TO 9

                COMPLETED   = 1
                MAGICSTATUS = 0
                MAGICOFFSET = 0
            END IF

            EXIT SUB
        END IF

        'PREPARE THE FIRE MAGIC
        FOR I = 0 TO UBOUND(PARTICLES) - 1
            CALL POPULATEFIRE(I, TARGET)
        NEXT I

        'MAGIC IS STARTING, SELECT THE DAMAGES TO APPLY TO THE TARGET
        DAMAGES = RND(150)

        'WITH DAMAGES HIGHER THAN 99, INCREASE CHANCE TO MISS TARGET
        IF DAMAGES > 99 THEN
            DAMAGES = 0
        END IF

        'PLAY THE FIRE SOUND
        CALL PLAYFIRE
    END IF

    INC MAGICSTATUS
    MAGICOFFSET  = 0
END SUB

'***************************************
'POPULATE HEALTH PARTICLES
'INDEX - PARTICLE INDEX
'TARGET - TARGET INDEX
'***************************************
SUB POPULATEHEALTH(INDEX, TARGET)
    X  = 0
    Y  = 0
    EX = 2
    EY = 3

    'SEARCH FOR TARGET
    IF TARGET = 0 THEN
        'BLACK WIZARD
        X = 100
        Y = 36
    ELSE IF TARGET = 1 THEN
        'WHITE WIZARD
        X = 124
        Y = 52
    ELSE IF TARGET = 2 THEN
        'ENEMY
        X  = 12
        Y  = 44
        EX = 4
        EY = 4
    END IF

    PARTICLES(INDEX, 0) = X + RND(EX * 8)
    PARTICLES(INDEX, 1) = Y + RND(EY * 8)
    PARTICLES(INDEX, 2) = 0
    PARTICLES(INDEX, 3) = 1
    PARTICLES(INDEX, 4) = 1
    PARTICLES(INDEX, 5) = 0
    PARTICLES(INDEX, 6) = 0
    PARTICLES(INDEX, 7) = RND(50)
END SUB

'***************************************
'POPULATE FIRE PARTICLES
'INDEX - PARTICLE INDEX
'TARGET - TARGET INDEX
'***************************************
SUB POPULATEFIRE(INDEX, TARGET)
    X  = 0
    Y  = 0
    EX = 2
    EY = 3

    'SEARCH FOR TARGET
    IF TARGET = 0 THEN
        'BLACK WIZARD
        X = 108
        Y = 60
    ELSE IF TARGET = 1 THEN
        'WHITE WIZARD
        X = 132
        Y = 76
    ELSE IF TARGET = 2 THEN
        'ENEMY
        X  = 28
        Y  = 76
        EX = 4
        EY = 4
    END IF

    PARTICLES(INDEX, 0) = X
    PARTICLES(INDEX, 1) = Y
    PARTICLES(INDEX, 2) = 0
    PARTICLES(INDEX, 3) = 1
    PARTICLES(INDEX, 4) = 0
    PARTICLES(INDEX, 5) = (RND(2000) - 1000) / 1000
    PARTICLES(INDEX, 6) = 0
    PARTICLES(INDEX, 7) = RND(50)
END SUB

'***************************************
'ATTACK A TARGET
'ATTACKER - ATTACKER INDEX
'TARGET - TARGET INDEX
'COMPLETED - IF 1 THE ATTACK WAS COMPLETED
'***************************************
SUB ATTACK(ATTACKER, TARGET, COMPLETED)
    'ATTACK WAS COMPLETED?
    IF ATTACKANGLE >= 314 THEN
        DAMAGECOMPLETED = 0
        CALL APPLYDAMAGE(TARGET, DAMAGES, 7, DAMAGECOMPLETED)

        IF DAMAGECOMPLETED = 1 THEN
            'RESET VALUES AND NOTIFY ATTACK IS COMPLETED
            DELTA(ATTACKER) = 0
            ATTACKANGLE     = 0
            COMPLETED       = 1
        END IF

        EXIT SUB
    ELSE IF ATTACKANGLE = 0 THEN
        'ATTACK IS STARTING, SELECT THE DAMAGES TO APPLY TO THE TARGET
        DAMAGES = RND(150)

        'WITH DAMAGES HIGHER THAN 99, INCREASE CHANCE TO MISS TARGET
        IF DAMAGES > 99 THEN
            DAMAGES = 0
        END IF

        CALL PLAYATTACK
    END IF

    'CALCULATE THE ATTACK ANIMATION
    DELTA(ATTACKER) = 10.0 * SIN(ATTACKANGLE / 100.0)
    ADD ATTACKANGLE, 20
END SUB

'***************************************
'PUSH AN ATTACK ONTO ROUND STACK
'INDEX - CHAR INDEX WHICH WILL ATTACK ON THE NEXT ROUND
'***************************************
SUB PUSHATTACK(INDEX)
    IF ROUNDSTACK(0) = 0 THEN
        ROUNDSTACK(0) = INDEX
    ELSE IF ROUNDSTACK(1) = 0 THEN
        ROUNDSTACK(1) = INDEX
    ELSE IF ROUNDSTACK(2) = 0 THEN
        ROUNDSTACK(2) = INDEX
    END IF
END SUB

'***************************************
'POP AN ATTACK OUT OF THE STACK
'***************************************
SUB POPATTACK
    ROUNDSTACK(0) = ROUNDSTACK(1)
    ROUNDSTACK(1) = ROUNDSTACK(2)
    ROUNDSTACK(2) = 0
END SUB

'***************************************
'PROCESS THE SCHELUDED ATTACK
'***************************************
SUB PROCESSSCHELUDEDATK
    'FOUND A SCHELUDED ATTACK?
    IF ROUNDSTACK(0) = 0 THEN
        EXIT SUB
    END IF

    COMPLETED = 0
    INDEX     = ROUNDSTACK(0) - 1

    'PROCESS THE ATTACK
    IF INDEX = 2 OR SELECTEDACTION = 1 THEN
        CALL ATTACK(INDEX, STATS(INDEX, 5), COMPLETED)
    ELSE IF SELECTEDACTION = 2 THEN
        CALL MAGIC(INDEX, STATS(INDEX, 5), COMPLETED)
    END IF

    'ATTACK WAS COMPLETED?
    IF COMPLETED = 1 THEN
        CALL POPATTACK

        STATS(INDEX, 0) = 0
        STATS(INDEX, 2) = 0
        SELECTEDACTION  = 0
    END IF
END SUB

'***************************************
'APPLY THE DAMAGES
'TARGET - TARGET WHICH WILL RECEIVE THE DAMAGES
'VALUE - DAMAGE VALUE
'P - PALETTE TO USE
'COMPLETED - IF TRUE DAMAGE WERE APPLIED
'***************************************
SUB APPLYDAMAGE(TARGET, VALUE, P, COMPLETED)
    'CALCULATE THE POINT ANIMATION
    DELTAPOS = 10.0 * SIN(POINTANGLE / 100.0)
    ADD POINTANGLE, 10

    'ANIMATION COMPLETED?
    IF POINTANGLE > 314 THEN
        'HIDE SPRITES
        SPRITE OFF 40 TO 41

        'RESET THE VALUES
        POINTANGLE = 0
        COMPLETED  = 1

        EXIT SUB
    END IF

    'BY DEFAULT GET THE ENEMY POSITION
    X = 32
    Y = 44

    'UPDATE THE POSITION IF TARGET IS A WIZARD
    IF TARGET = 0 THEN
        X = 107
        Y = 32
    ELSE IF TARGET = 1 THEN
        X = 131
        Y = 48
    END IF

    'DRAW THE REMOVED POINTS ON TARGET
    IF VALUE = 0 THEN
        SPRITE 40 PAL P
        SPRITE 40, X - 4, Y - DELTAPOS, 11
        SPRITE 41 PAL P
        SPRITE 41, X + 4, Y - DELTAPOS, 12
    ELSE IF VALUE > 9 THEN
        SPRITE 40 PAL P
        SPRITE 40, X - 2, Y - DELTAPOS, VALUE \ 10

        SPRITE 41 PAL P

        IF (VALUE MOD 10) = 0 THEN
            SPRITE 41, X + 3, Y - DELTAPOS, 10
        ELSE
            SPRITE 41, X + 3, Y - DELTAPOS, VALUE MOD 10
        END IF
    ELSE
        SPRITE 40 PAL P
        SPRITE 40, X, Y - DELTAPOS, VALUE
    END IF
END SUB

'***************************************
'DRAW THE SKY
'***************************************
SUB DRAWSKY
    BG 1
    PAL 6

    FOR I = 0 TO 1
        BG FILL 0, I TO 19, I CHAR 132
    NEXT I

    PAL 5
    BG FILL 0, 2 TO 19, 2 CHAR 131
END SUB

'***************************************
'DRAW THE MOUNTAINS
'***************************************
SUB DRAWMOUNTAINS
    BG 0
    PAL 4

    'DRAW THE BACKGROUND MOUNTAINS
    FOR I = 0 TO 19
        CELL I, 2, 128 + (I MOD 3)
        CELL I, 3, 144 + (I MOD 3)
    NEXT I
END SUB

'***************************************
'DRAW THE GROUND
'***************************************
SUB DRAWGROUND
    BG 1
    PAL 6

    'DRAW THE GRASS BELOW MOUNTAIN
    FOR I = 0 TO 19
        CELL I, 4, 147 + (I MOD 1)
    NEXT I

    'DRAW THE RANDOM GRASS
    CELL 0,  5,  133
    CELL 17, 5,  133
    CELL 10, 6,  133
    CELL 6,  7,  133
    CELL 12, 9,  133
    CELL 2,  10, 133
    CELL 15, 11, 133
END SUB

'***************************************
'DRAW THE BLACK WIZARD
'X - X POSITION
'Y - Y POSITION
'FRAME - FRAME TO DRAW
'***************************************
SUB DRAWBLACKWIZARD(X, Y, FRAME)
    IF FRAME = BWDEAD THEN
        CALL DRAWWIZARD(X, Y, FRAME, 0, 10, 1)
    ELSE
        CALL DRAWWIZARD(X, Y, FRAME, 0, 10, 0)
    END IF
END SUB

'***************************************
'DRAW THE WHITE WIZARD
'X - X POSITION
'Y - Y POSITION
'FRAME - FRAME TO DRAW
'***************************************
SUB DRAWWHITEWIZARD(X, Y, FRAME)
    IF FRAME = WWDEAD THEN
        CALL DRAWWIZARD(X, Y, FRAME, 1, 16, 1)
    ELSE
        CALL DRAWWIZARD(X, Y, FRAME, 1, 16, 0)
    END IF
END SUB

'***************************************
'DRAW A WIZARD
'X - X POSITION
'Y - Y POSITION
'C - 2X3 GRID STARTING CHAR INDEX TO DRAW
'P - PALETTE TO USE
'INDEX - SPRITE START INDEX
'SWAPGRID - IF 1, GRID WILL BE SWAPPED TO 3X2
'***************************************
SUB DRAWWIZARD(X, Y, C, P, INDEX, SWAPGRID)
    LX = 1
    LY = 2

    IF SWAPGRID = 1 THEN
        LX = 2
        LY = 1
    END IF

    'ITERATE THROUGH THE GRID TO DRAW
    FOR J = 0 TO LY
        FOR I = 0 TO LX
            'DRAW THE SPRITE
            SPRITE INDEX PAL P
            SPRITE INDEX, X + (I * 8), Y + (J * 8), C + ((J * 16) + I)

            INC INDEX
        NEXT I
    NEXT J
END SUB

'***************************************
'DRAW THE WOLF
'X - X POSITION
'Y - Y POSITION
'C - 4X4 GRID STARTING CHAR INDEX TO DRAW
'***************************************
SUB DRAWWOLF(X, Y, C)
    'ITERATE THROUGH THE 4X4 GRID TO DRAW
    FOR J = 0 TO 3
        FOR I = 0 TO 3
            'CALCULATE THE SPRITE INDEX
            INDEX = ((J * 4) + I) + 22

            'DRAW THE SPRITE
            SPRITE INDEX PAL 3
            SPRITE INDEX, X + (I * 8), Y + (J * 8), C + ((J * 16) + I)
        NEXT I
    NEXT J
END SUB

'***************************************
'DRAW PARTICLES
'***************************************
SUB DRAWPARTICLES
    'EVEN STATUS HAPPENS ONLY WHILE NEXT PARTICLES CYCLE IS CALCULATED
    IF (MAGICSTATUS MOD 2) = 0 THEN
        EXIT SUB
    END IF

    ISHEALTH  = 0
    ISVISIBLE = 0

    FOR I = 0 TO UBOUND(PARTICLES) - 1
        IF PARTICLES(I, 3) THEN
            ISVISIBLE = 1
            X         = PARTICLES(I, 0)
            Y         = PARTICLES(I, 1)

            'SELECT PARTICLE TYPE
            IF PARTICLES(I, 4) = 0 THEN
                'FIRE, CONFIGURE THE RED PALETTE
                PALETTE 2, , 62, 56, 48

                IF MAGICOFFSET >= PARTICLES(I, 7) THEN
                    ADD PARTICLES(I, 0), PARTICLES (I, 5)
                    ADD PARTICLES(I, 6), 14

                    'SELECT THE PARTICLE TYPE AND CHECK IF END REACHED
                    IF PARTICLES(I, 6) > 314 THEN
                        PARTICLES(I, 3) = 0
                        PARTICLES(I, 6) = 314
                        PARTICLES(I, 2) = 0
                    ELSE IF PARTICLES(I, 6) > 235 THEN
                        PARTICLES(I, 2) = 162
                    ELSE IF PARTICLES(I, 6) > 157 THEN
                        PARTICLES(I, 2) = 161
                    ELSE
                        PARTICLES(I, 2) = 160
                    END IF

                    X = PARTICLES(I, 0)
                    ADD Y, -(24 * SIN(PARTICLES(I, 6) / 100.0))
                END IF
            ELSE IF PARTICLES(I, 4) = 1 THEN
                'HEALTH, CONFIGURE THE GREEN PALETTE
                PALETTE 2, , 12, 8, 4

                IF MAGICOFFSET >= PARTICLES(I, 7) + 12 THEN
                    PARTICLES(I, 2) = 0
                ELSE IF MAGICOFFSET >= PARTICLES(I, 7) + 8 THEN
                    PARTICLES(I, 2) = 162
                ELSE IF MAGICOFFSET >= PARTICLES(I, 7) + 4 THEN
                    PARTICLES(I, 2) = 161
                ELSE IF MAGICOFFSET >= PARTICLES(I, 7) THEN
                    PARTICLES(I, 2) = 162
                ELSE
                    PARTICLES(I, 2) = 0
                END IF

                ISHEALTH = 1
            END IF

            'DRAW THE PARTICLE
            SPRITE I PAL 2
            SPRITE I, X, Y, PARTICLES(I, 2)
        END IF
    NEXT I
    
    INC MAGICOFFSET

    'HEALTH MAGIC COMPLETED?
    IF ISHEALTH = 1 AND MAGICOFFSET >= 62 THEN
        INC MAGICSTATUS
        MAGICOFFSET  = 0
    'FIRE MAGIC COMPLETED?
    ELSE IF ISHEALTH = 0 AND ISVISIBLE = 0 THEN
        INC MAGICSTATUS
        MAGICOFFSET  = 0
    END IF
END SUB

'***************************************
'DRAW THE MENU
'***************************************
SUB DRAWMENU
    BG 0
    PAL 7

    'DRAW THE MENU BORDERS
    FOR I = 0 TO 19
        IF I = 0 OR I = 7 THEN
            CELL I, 12, 134
            CELL I, 13, 167
            CELL I, 14, 167
            CELL I, 15, 150
        ELSE IF I = 6 OR I = 19 THEN
            CELL I, 12, 135
            CELL I, 13, 167
            CELL I, 14, 167
            CELL I, 15, 151
        ELSE
            CELL I, 12, 166
            CELL I, 15, 166
        END IF
    NEXT I

    'SHOW THE ATTACK DELAY PROGRESSBAR
    CALL DRAWPROGRESS(2, 13, STATS(0, 0))
    CALL DRAWPROGRESS(2, 14, STATS(1, 0))

    'IS AN ATTACK SCHELUDED?
    IF ROUNDSTACK(0) = 1 OR ROUNDSTACK(0) = 2 THEN
        CALL DRAWMENUITEMS
    END IF
END SUB

'***************************************
'DRAW THE MENU ITEMS
'***************************************
SUB DRAWMENUITEMS
    'ACTION WAS ALREADY SELECTED?
    IF SELECTEDACTION <> 0 THEN
        SPRITE OFF 38 TO 39
        EXIT SUB
    END IF

    'SHOW THE MENU ITEMS
    TEXT 10, 13, "FIGHT"
    TEXT 10, 14, "MAGIC"

    'SHOW THE HAND CURSOR
    SPRITE 38 PAL 7
    SPRITE 38, 72, CURSORPOS, 149

    'SELECT THE HAND CURSOR COLOR
    SPRITE 39 PAL 7

    'CALCULATE THE CURSOR ANIMATION
    DELTAY      = 2 * SIN(CURSORANGLE / 100.0)
    CURSORANGLE = (CURSORANGLE + 20) MOD 628

    'SHOW THE HAND CURSOR ABOVE CHAR
    IF ROUNDSTACK(0) = 1 THEN
        SPRITE 39, 106, 30 - DELTAY, 165
    ELSE IF ROUNDSTACK(0) = 2 THEN
        SPRITE 39, 130, 46 - DELTAY, 165
    END IF

    'MOVE THE HAND CURSOR UP OR DOWN ON USER SELECTION
    IF UP(0) THEN
        CALL PLAYMENUITEMCHANGE
        CURSORPOS = 104
    ELSE IF DOWN(0) THEN
        CALL PLAYMENUITEMCHANGE
        CURSORPOS = 112
    END IF

    'KEEP THE SELECTED ACTION IF USER SELECTED ONE
    IF SELECTEDACTION = 0 AND BUTTON(0, 0) THEN
        IF CURSORPOS = 104 THEN
            SELECTEDACTION = 1
        ELSE IF CURSORPOS = 112 THEN
            SELECTEDACTION = 2
        END IF
    END IF
END SUB

'***************************************
'DRAW A PROGRESSBAR
'X - X POSITION
'Y - Y POSITION
'POS - PROGRESS POSITION, BETWEEN 0 AND 100
'***************************************
SUB DRAWPROGRESS(X, Y, POS)
    PAL 7
    INDEX = INT(MIN(POS, 100) * 0.22)

    IF INDEX >= 0 AND INDEX <= 7 THEN
        CELL X,     Y, 136 + INDEX
        CELL X + 1, Y, 184
        CELL X + 2, Y, 152
    ELSE IF INDEX >= 8 AND INDEX <= 15 THEN
        CELL X,     Y, 143
        CELL X + 1, Y, 168 + (INDEX - 8)
        CELL X + 2, Y, 152
    ELSE
        CELL X,     Y, 143
        CELL X + 1, Y, 175
        CELL X + 2, Y, 153 + (INDEX - 16)
    END IF
END SUB

'***************************************
'PLAY THE MENU ITEM CHANGE SOUND
'***************************************
SUB PLAYMENUITEMCHANGE
    SOUND 3, 1, 15, 0
    ENVELOPE 3, 1, 0, 0, 15
    LFO 3, 8, 9, 4, 6
    LFO WAVE 3, 1, 0, 1, 1
    PLAY 3, 68
END SUB

'***************************************
'PLAY THE ATTACK SOUND
'***************************************
SUB PLAYATTACK
    SOUND 2, 3, 15, 5
    ENVELOPE 2, 0, 0, 15, 0
    LFO 2, 0, 9, 0, 0
    LFO WAVE 2, 2, 1, 0, 0
    PLAY 2, 80
END SUB

'***************************************
'PLAY THE HEALTH SOUND
'***************************************
SUB PLAYHEALTH
    SOUND 2, 1, 15, 0
    ENVELOPE 2, 0, 12, 0, 0
    LFO 2, 12, 12, 11, 15
    LFO WAVE 2, 3, 0, 0, 1
    PLAY 2, 85, 100
END SUB

'***************************************
'PLAY THE FIRE SOUND
'***************************************
SUB PLAYFIRE
    SOUND 2, 3, 15, 0
    ENVELOPE 2, 0, 12, 0, 0
    LFO 2, 12, 12, 11, 15
    LFO WAVE 2, 3, 0, 0, 1
    PLAY 2, 85, 100
END SUB

#1:MAIN PALETTES
000B3924003F3930003E383000383420
003A25100016263600060429003F2A15

#2:MAIN CHARACTERS
00000000000000000000000000000000
000C1C3C0C0C1E000004041404040200
001C36060C183E000004120204080200
001C360C06361C000004120402120400
001818303C3E0C000008081014020400
003E303C06063C000002100402020400
000C18303C361C000004081004120400
003E060C0C1818000002020404080800
001C361C36361C000004120412120400
001C361E060C18000004120202040800
001C363636361C000004121212120400
00008FFFFFCFCF000000052555454500
000077CCFF3366000000114411112200
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
000000000000780F0000000003FF7F0F
0002040C38F87810061E3CFCF8F8F8F0
000000000000780F0000000003FF7F0F
0002040C38F87810061E3CFCF8F8F8F0
000000000000780F0000000003FF7F0F
0002040C38F87810061E3CFCF8F8F8F0
00000000000000000000020607070F0F
00000000000000600000000000000060
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
0001071F3F409FA70000000000001F2F
3CFEFEF6FAFC7CBC0000000000000080
0001071F3F409FA70000000000001F2F
3CFEFEF6FAFC7CBC0000000000000080
0100002040713F1C01080901000000C0
F83C0E0B04FC18FCF83C0E0300000000
0100002040717F3F0108090100000000
F83C0E0B04FC983CF83C0E0300000000
0100002000211F1F01080981C000C0C0
F83C0E0308F4CCFCF83C0E0300000000
0010210700001F203E7FFFFF7F3F1F04
3CCFCF8F1E7CE00C3CCFFFFFFEFCE080
0000000000000033000187FF7F3F0F33
00101020E63C79E678F0F0E0E6FCF8E0
0000001C62DE1FCF00000000001E1FCF
00000000000000000000000000000000
5020000030F0EFEF110B0B0F0E80E8CE
DC5838307814EEF6C0C0808000000000
502000000030F1EF110B0B0F0E0080E8
DC5838307814EEF6C0C0808000000000
183858586F7779FFC006060000000000
FCFCFCF87878B4CE0000000000000000
1C183868586779FFC0C0060600000000
FCFCFCF8F878B4CE0000000000000000
1F1F5F6F6F870B0480000000000060F0
FCFCFCF8FCFCFEFF0000000000000000
30787E7C7E7F1F070000000100000060
3EFE7F3F3F83C1800000008000001C3E
7EF9F7CF7F0F07007EF8F0C04000F000
3DFDFCE0FEFFFFF80101000000000000
C0E2E242048418E0C0E0E04000000000
00000000000000000000000000000000
EFEFE7EFE76F5F3F8CE8C786E241583F
F6FEFEFEFEFEFE3F0000000040C8DA3F
EFEFEFEFE7EF7F7FCE8CE8CF86E3587F
F6FEFEFEFEFEFE3F0000000040C8DA3F
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00192C4850002820187F7DF8F0E0EF6F
00002000000080000000E000000080C0
00000000000000000000000000000000
00000000000000000000000000000000
0000030F1F204F530000000000000F17
1E7FFFFBFD7EBEDE00000000000080C0
0000000000030F1F0000000000000000
00000000E0F0F8F80000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
20000244444003233F1F3F7F7F7B3B3B
F718630084464267F7FFFFFFBF7E7E7F
802090B01C8EC00080E0F0B05CCEF23F
00000000000080000000000080808000
28106070707078688885C57767407363
EE2C1C183C0A777BE0E0C0C000004070
3F7F60DFAFB760000000001F3F3F0416
ECF4F878B8DC5E1E0000000080C040C0
000000071F3C7B7F0000000000000000
000000800080C1F60000000000000000
0000001C62858000000000000C0E0767
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
21C0F0C18081C1A139F0F0C1C1C1E101
7EBD981C1B7080807EFDFBFCFBF08080
004912C28F701C2BFD4DC2E2FF7F1C2B
0000804080404060C000004080404060
6C6F6F5F3F3F7F7F406040400012367F
7B3F3F3FBF9F9FCF60203830301C98CC
2060DFC8CEF616080F000040C0F010E9
3E7F7FFFFFFF3F1F00000080E0D436DF
FFFF7C730F3F0F01000000000D3B4FE1
FE3EFEFBFCFFFFFF0000000000246DFF
200001018102C6F87378381800000080
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
01010101000000000101010100000000
0000C080D00000008080C0E000000000
100E000000000000000E000000000000
20301814000000002030180000000000
000000060B1A3AD500000002050F072B
000000008856E5DB0000000080CEDF27
00000000102C4AB500000000001C3E4F
FFFF000000FFFFFF0000FFFFFFFFFFFF
FFFFFFFFFFFFFFFF0000000000000000
00101002400400000010110B4A2C3E1C
0003040B142B2A2A0003070C1B373636
00E010E814EA2A2A00E0F018ECF63636
00007F80807F000000000080807F0000
00007F80807F0000000000C0C07F0000
00007F80807F0000000000E0E07F0000
00007F80807F0000000000F0F07F0000
00007F80807F0000000000F8F87F0000
00007F80807F0000000000FCFC7F0000
00007F80807F0000000000FEFE7F0000
00007F80807F0000000000FFFF7F0000
C1D766B97DF0CAE4BEECF9E6C28F351B
D020A440108800202FDF5BBFEF77FFDF
C8F03DF83A5E2F8FB7EFF2FFFDFDFEFF
00000000000000006FB96FAADDE55601
0000000000000000F7DFFEC77AD74292
38367E717A747800384E818F868C7800
2A2B140B0403000036371B0C07030000
2AEA14E810E0000036F6EC18F0E00000
0000FE0101FE00000000000101FE0000
0000FE0101FE00000000008181FE0000
0000FE0101FE0000000000C1C1FE0000
0000FE0101FE0000000000E1E1FE0000
0000FE0101FE0000000000F1F1FE0000
0000FE0101FE0000000000F9F9FE0000
0000FE0101FE0000000000FDFDFE0000
0000FE0101FE0000000000FFFFFE0000
0018245A5A24180000183C66663C1800
00102854281000000010386C38100000
00001028100000000000103810000000
00000000000000000000000000000000
00000000000000000000000000000000
007C7F7F552616083C4241416B3A1A0C
00FF00FF00FF000000FFFF00FFFF0000
2A2A2A2A2A2A2A2A3636363636363636
0000FF0000FF00000000008080FF0000
0000FF0000FF0000000000C0C0FF0000
0000FF0000FF0000000000E0E0FF0000
0000FF0000FF0000000000F0F0FF0000
0000FF0000FF0000000000F8F8FF0000
0000FF0000FF0000000000FCFCFF0000
0000FF0000FF0000000000FEFEFF0000
0000FF0000FF0000000000FFFFFF0000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
0000FF0000FF00000000000000FF0000

#15:MAIN SOUND
2800303A000000001800846C003A0000
08006060000000002800303019FE0000
38002020000000003800505000000000
0800000F000000000800000F00000000
0800000F000000000800000F00000000
0800000F000000000800000F00000000
0800000F000000000800000F00000000
0800000F000000000800000F00000000
00014040820340400405404004054040
06874040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
40404040404040404040404040404040
260F00280F002F0F002E0F0000000000
00000000000000002A0F002B0F00340F
00330F00000000000000000000000000
00000000000000000000000000000000
00000000000000002F0F000000002D0F
000000002B0F00000000260F00000000
28080000000034080000000023080000
00002F08000000002408000000003008
00000000240F00000000300F00000000
260F00240F00230F00240F00260F0024
0F00230F00210F000000000000001C0F
000000000000000000001A0F00000000
280F0000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000FF0000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
1C0F00000000280F00000000230F0000
00002F0F00000000240F00000000300F
00000000210F000000002D0F00000000
1C0F00000000280F00000000230F0000
00002F0F00000000240F00000000300F
00000000210F000000002D0F00000000
340F00320F00340F00370F00360F0037
0F00390F00370F00360F00340F002D0F
000000002B0F000000002A0F00000000
2B0F0000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
1C0F00000000280F00000000230F0000
00002F0F00000000240F00000000300F
00000000210F000000002D0F00000000
1C0F00000000280F00000000230F0000
00002F0F00000000240F00000000300F
00000000210F000000002D0F00000000
340F00000000FF0000000000340F0000
0000FF0000000000330F000000000000
00000000FF0000000000000000000000
340F00FF0000000000000000340F00FF
0000000000000000330F00FF00000000
00000000000000000000000000000000
300F00FF0000000000000000300F00FF
00000000000000002F0F00000000FF00
00000000000000000000000000000000
370F00000000FF0000000000370F0000
0000FF00000000002F0F00300F00330F
00340F00370F003B0F00400F00470F00

